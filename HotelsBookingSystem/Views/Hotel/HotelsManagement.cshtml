@model HotelsBookingSystem.ViewModels.AdminViewModels.HotelsManagementViewModel

@{
    ViewData["Title"] = "Hotels Management";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hotels Management</title>
    <link href="~/css/AdminDashboard.css" rel="stylesheet" />
    <link href="~/css/HotelsManagement.css" rel="stylesheet" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

</head>
<body>
    <div class="dashboard">
        <div class="header">
            <h1 class="title">Hotels Management</h1>
            <div>
                <button id="addHotelBtn" class="add-hotel-btn">
                    <i class="fa fa-plus"></i> Add New Hotel
                </button>
            </div>
        </div>

        <div class="filters-section">
            <div class="search-bar">
                <input type="text" id="hotelSearch" class="search-input" placeholder="Search hotels...">
                <select id="statusFilter" class="filter-select">
                    <option value="all">All Statuses</option>
                    <option value="active">Available</option>
                    <option value="inactive">Full</option>
                    <option value="maintenance">Maintenance</option>
                </select>
                <button class="filter-btn">Apply Filters</button>
            </div>
        </div>

        <div class="hotels-grid" id="hotelsContainer">
            @foreach (var hotel in Model.Hotels)
            {
                <div class="hotel-card" data-id="@hotel.Id" data-status="@hotel.Status.ToLower()">
                    <div class="hotel-card-header">
                        <img src="@hotel.ImageUrl" alt="@hotel.Name" class="hotel-card-image">
                        <span class="status-badge @hotel.Status.ToLower()">@hotel.Status</span>
                    </div>
                    <div class="hotel-card-body">
                        <h3 class="hotel-card-title">@hotel.Name</h3>
                        <div class="hotel-card-info">
                            <p><i class="fa fa-map-marker"></i> @hotel.Location</p>
                            <p><i class="fa fa-bed"></i> @hotel.RoomCount rooms</p>
                            <p><i class="fa fa-star"></i> 5 stars</p>
                            @* <p><i class="fa fa-star"></i> @hotel.Rating stars</p> *@
                        </div>
                        <div class="hotel-card-description">
                            @(hotel.Description?.Length > 100 ? hotel.Description.Substring(0, 100) + "..." : hotel.Description)
                        </div>
                    </div>
                    <div class="hotel-card-footer">
                        <button class="action-btn view" data-id="@hotel.Id">View Details</button>
                        <button class="action-btn edit" data-id="@hotel.Id">Edit</button>
                        <button class="action-btn delete" data-id="@hotel.Id">Delete</button>
                    </div>
                </div>
            }
        </div>

        <!-- Hotel Details Modal -->
        <div id="hotelDetailsModal" class="modal">
            <div class="modal-content">
                <div class="modal-header">
                    <h2 id="detailsModalTitle">Hotel Details</h2>
                    <span class="close-modal">&times;</span>
                </div>
                <div id="hotelDetailsContent" class="modal-body">
                    <!-- Details content will be loaded here -->
                </div>
            </div>
        </div>

        <!-- Add/Edit Hotel Modal -->
        <div id="hotelFormModal" class="modal">
            <div class="modal-content">
                <div class="modal-header">
                    <h2 id="formModalTitle">Add New Hotel</h2>
                    <span class="close-modal">&times;</span>
                </div>
                <div class="modal-body">
                    <form id="hotelForm" method="post">
                        <input type="hidden" id="hotelId" name="Id" value="0" />
                        
                        <div class="form-group">
                            <label for="hotelName">Hotel Name</label>
                            <input type="text" id="hotelName" name="Name" class="form-control" required />
                        </div>
                        
                        <div class="form-group">
                            <label for="hotelLocation">Location</label>
                            <input type="text" id="hotelLocation" name="Location" class="form-control" required />
                        </div>
                        
                        <div class="form-group">
                            <label for="hotelDescription">Description</label>
                            <textarea id="hotelDescription" name="Description" class="form-control" rows="3"></textarea>
                        </div>
                        
                        <div class="form-row">
                            <div class="form-group half">
                                <label for="hotelRating">Rating</label>
                                <select id="hotelRating" name="Rating" class="form-control">
                                    <option value="1">1 Star</option>
                                    <option value="2">2 Stars</option>
                                    <option value="3">3 Stars</option>
                                    <option value="4">4 Stars</option>
                                    <option value="5">5 Stars</option>
                                </select>
                            </div>
                            
                            <div class="form-group half">
                                <label for="hotelStatus">Status</label>
                                <select id="hotelStatus" name="Status" class="form-control">
                                    <option value="Active">Active</option>
                                    <option value="Inactive">Inactive</option>
                                    <option value="Maintenance">Maintenance</option>
                                </select>
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <label for="hotelImage">Hotel Image URL</label>
                            <input type="text" id="hotelImage" name="ImageUrl" class="form-control" />
                        </div>
                        
                        <div class="form-actions">
                            <button type="button" class="btn cancel-btn" data-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn save-btn">Save Hotel</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Delete Confirmation Modal -->
        <div id="deleteConfirmModal" class="modal">
            <div class="modal-content delete-modal">
                <div class="modal-header">
                    <h2>Confirm Delete</h2>
                    <span class="close-modal">&times;</span>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this hotel? This action cannot be undone.</p>
                    <div class="form-actions">
                        <button type="button" class="btn cancel-btn" data-dismiss="modal">Cancel</button>
                        <button type="button" id="confirmDeleteBtn" class="btn delete-btn">Delete</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/js/all.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Variables for modals
            const hotelDetailsModal = document.getElementById('hotelDetailsModal');
            const hotelFormModal = document.getElementById('hotelFormModal');
            const deleteConfirmModal = document.getElementById('deleteConfirmModal');
            const formModalTitle = document.getElementById('formModalTitle');
            let currentHotelId = 0;
            
            // Open modals
            document.getElementById('addHotelBtn').addEventListener('click', function() {
                formModalTitle.textContent = 'Add New Hotel';
                document.getElementById('hotelId').value = '0';
                document.getElementById('hotelForm').reset();
                openModal(hotelFormModal);
            });
            
            // Set up view/edit/delete button handlers
            const viewButtons = document.querySelectorAll('.action-btn.view');
            const editButtons = document.querySelectorAll('.action-btn.edit');
            const deleteButtons = document.querySelectorAll('.action-btn.delete');
            
            viewButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const hotelId = this.getAttribute('data-id');
                    loadHotelDetails(hotelId);
                });
            });
            
            editButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const hotelId = this.getAttribute('data-id');
                    loadHotelForEdit(hotelId);
                });
            });
            
            deleteButtons.forEach(button => {
                button.addEventListener('click', function() {
                    currentHotelId = this.getAttribute('data-id');
                    openModal(deleteConfirmModal);
                });
            });
            
            // Confirm delete
            document.getElementById('confirmDeleteBtn').addEventListener('click', function() {
                if (currentHotelId) {
                    deleteHotel(currentHotelId);
                }
            });
            
            // Close modals
            const closeButtons = document.querySelectorAll('.close-modal, .cancel-btn');
            closeButtons.forEach(button => {
                button.addEventListener('click', function() {
                    closeAllModals();
                });
            });
            
            // Filter functionality
            const filterBtn = document.querySelector('.filter-btn');
            filterBtn.addEventListener('click', filterHotels);
            
         
            // Form submission
            document.getElementById('hotelForm').addEventListener('submit', function(e) {
                e.preventDefault();
                saveHotel();
            });
            
            // Functions
            function openModal(modal) {
                modal.style.display = 'block';
            }
            
            function closeAllModals() {
                hotelDetailsModal.style.display = 'none';
                hotelFormModal.style.display = 'none';
                deleteConfirmModal.style.display = 'none';
            }
            
            function loadHotelDetails(hotelId) {
                // In a real application, this would make an AJAX call to get the hotel details
                // For demonstration, we'll just show the modal
                document.getElementById('detailsModalTitle').textContent = "Hotel Details";
                document.getElementById('hotelDetailsContent').innerHTML = "Loading hotel details...";
                openModal(hotelDetailsModal);
                
                // Example AJAX call:
                /*
                fetch(`/Admin/GetHotelDetails/${hotelId}`)
                    .then(response => response.json())
                    .then(data => {
                        document.getElementById('detailsModalTitle').textContent = data.name;
                        document.getElementById('hotelDetailsContent').innerHTML = generateDetailsHtml(data);
                    })
                    .catch(error => {
                        console.error('Error loading hotel details:', error);
                    });
                */
            }
                   function loadHotelForEdit(hotelId) {
            formModalTitle.textContent = 'Edit Hotel';
            document.getElementById('hotelId').value = hotelId;

            // Don't reset the form until we have the data
            openModal(hotelFormModal);

            // Add a loading indicator
            const formContent = document.querySelector('#hotelFormModal .modal-body');
            const originalContent = formContent.innerHTML;
            formContent.innerHTML = '<p>Loading hotel data...</p>';

            // Fetch hotel data from your controller
            fetch(`/hotel/GetHotel/${hotelId}`)
                .then(response => response.json())
                .then(data => {
                    // Restore the form
                    formContent.innerHTML = originalContent;

                    // Now populate the form fields with the hotel data
                    document.getElementById('hotelId').value = data.id;
                    document.getElementById('hotelName').value = data.name;
                    document.getElementById('hotelLocation').value = data.location;
                    document.getElementById('hotelDescription').value = data.description;
                    // document.getElementById('hotelRating').value = data.rating;
                    document.getElementById('hotelStatus').value = data.status;
                    document.getElementById('hotelImage').value = data.imageUrl;
                })
                .catch(error => {
                    console.error('Error loading hotel for edit:', error);
                    formContent.innerHTML = originalContent;
                    alert('Failed to load hotel data. Please try again.');
                });
        }


            function saveHotel() {
            const form = document.getElementById('hotelForm');
            const hotelId = document.getElementById('hotelId').value;

            // Set the form's action to point to your controller method with the ID parameter
            if (hotelId !== '0') {
                form.action = `/Hotel/Update/${hotelId}`;
            } else {
                form.action = "/Hotel/Create"; // Assuming you have a Create action
            }

            // Submit the form normally (no AJAX)
            form.submit();
        }
            function deleteHotel(hotelId) {
                // Example AJAX call to delete hotel:
                /*
                fetch(`/Admin/DeleteHotel/${hotelId}`, {
                    method: 'POST'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        closeAllModals();
                        // Remove the hotel card from the UI
                        const hotelCard = document.querySelector(`.hotel-card[data-id="${hotelId}"]`);
                        if (hotelCard) {
                            hotelCard.remove();
                        }
                    } else {
                        alert('Error: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error deleting hotel:', error);
                });
                */
                
                // For demonstration purposes:
                closeAllModals();
                const hotelCard = document.querySelector(`.hotel-card[data-id="${currentHotelId}"]`);
                if (hotelCard) {
                    hotelCard.remove();
                }
                alert('Hotel deleted successfully! In a real application, this would delete from the database.');
            }
            
            function filterHotels() {
                const searchTerm = document.getElementById('hotelSearch').value.toLowerCase();
                const statusFilter = document.getElementById('statusFilter').value;
                
                const hotelCards = document.querySelectorAll('.hotel-card');
                
                hotelCards.forEach(card => {
                    const hotelName = card.querySelector('.hotel-card-title').textContent.toLowerCase();
                    const hotelStatus = card.getAttribute('data-status');
                    
                    const matchesSearch = hotelName.includes(searchTerm);
                    const matchesStatus = statusFilter === 'all' || hotelStatus === statusFilter;
                    
                    if (matchesSearch && matchesStatus) {
                        card.style.display = 'block';
                    } else {
                        card.style.display = 'none';
                    }
                });
            }
            
        });
    </script>
</body>
</html>


